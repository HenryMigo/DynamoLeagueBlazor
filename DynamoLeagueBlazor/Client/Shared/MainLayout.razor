@inherits LayoutComponentBase
@using DynamoLeagueBlazor.Client.Shared.NavMenu

<MudLayout>
    <MudIcon Icon=@Icons.Outlined.SportsFootball Style="position:absolute; z-index:-1; height: 100vh; width: 100%; opacity: 5%;"></MudIcon>
    <MudAppBar Elevation=3>
        <a href="/" class="d-flex">
            <img src="logo.PNG" height="30"/>
            <MudText Typo="Typo.h5" Class="ml-3">Fantasy Football</MudText>
        </a>
        <MudSpacer />
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => ToggleNavMenu())" />
    </MudAppBar>
    <NavMenu Show=_showNavMenu/>
    <MudMainContent>
        <MudContainer MaxWidth=MaxWidth.False Class="px-8 pt-8">
            <ErrorBoundary @ref=_errorBoundary>
                <ChildContent>
                    @Body
                    <MudDialogProvider/>
                    <MudSnackbarProvider/>
                </ChildContent>
                <ErrorContent>
                    <MudAlert Severity=Severity.Error>
                        An Error Occured...
                    </MudAlert>
                </ErrorContent>
            </ErrorBoundary>
        </MudContainer>
    </MudMainContent>
</MudLayout>
<MudThemeProvider Theme=darkTheme/>

@code {
    private static string[] HeaderFontFamily = new[] { "Graduate", "cursive" };

    private MudTheme darkTheme = new MudTheme()
    {
        Palette = new Palette()
        {
            Black = "#27272f",
            Background = "#32333d",
            BackgroundGrey = "#27272f",
            Surface = "#373740",
            DrawerBackground = "#27272f",
            DrawerText = "rgba(255,255,255, 0.50)",
            DrawerIcon = "rgba(255,255,255, 0.50)",
            AppbarBackground = "#27272f",
            AppbarText = "rgba(255,255,255, 0.70)",
            TextPrimary = "rgba(255,255,255, 0.70)",
            TextSecondary = "rgba(255,255,255, 0.50)",
            ActionDefault = "#adadb1",
            ActionDisabled = "rgba(255,255,255, 0.26)",
            ActionDisabledBackground = "rgba(255,255,255, 0.12)",
            Divider = "rgba(255,255,255, 0.12)",
            DividerLight = "rgba(255,255,255, 0.06)",
            TableLines = "rgba(255,255,255, 0.12)",
            LinesDefault = "rgba(255,255,255, 0.12)",
            LinesInputs = "rgba(255,255,255, 0.3)",
            TextDisabled = "rgba(255,255,255, 0.2)"
        },
        Typography = new Typography
        {
            Default = new Default { FontFamily = new[] { "Open Sans", "sans-serif" } },
            H1 = new H1 { FontFamily = HeaderFontFamily },
            H2 = new H2 { FontFamily = HeaderFontFamily },
            H3 = new H3 { FontFamily = HeaderFontFamily },
            H4 = new H4 { FontFamily = HeaderFontFamily },
            H5 = new H5 { FontFamily = HeaderFontFamily },
            H6 = new H6 { FontFamily = HeaderFontFamily }
        }
    };

    private ErrorBoundary? _errorBoundary;
    private bool _showNavMenu = true;

    protected override void OnParametersSet()
    {
        _errorBoundary?.Recover();
    }

    private void ToggleNavMenu()
    {
        _showNavMenu = !_showNavMenu;
    }
}
