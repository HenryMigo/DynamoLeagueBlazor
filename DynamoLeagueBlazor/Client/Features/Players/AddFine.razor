<EditForm Model=_form OnValidSubmit=OnValidSubmitAsync>
    <FluentValidationValidator />
    <MudDialog>
        <DialogContent>
             This player's contract is worth <b class="mud-success-text">@_fineDetail.ContractValue</b> and when penalized their fine amount is <b class="mud-error-text">@_fineDetail.FineAmount</b>.
             <MudTextField Label="Fine Reason" HelperText="Enter a fine reason..." @bind-Value="_form.FineReason" For="@(() => _form.FineReason)" Lines=5/>
        </DialogContent>
        <DialogActions>
            <MudButton Color="Color.Transparent" Variant=Variant.Text OnClick="Cancel">Cancel</MudButton>
            <MudButton Color="Color.Success" Variant=Variant.Outlined StartIcon=@Icons.Outlined.Check OnClick="OnValidSubmitAsync" Disabled="@_processingForm">
                @if (_processingForm)
                {
                    <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true"/>
                    <MudText Class="ms-2">Saving...</MudText>
                }
                else
                {
                    <MudText>Save</MudText>
                }
            </MudButton>
        </DialogActions>
    </MudDialog>
</EditForm>
