@page "/fines"

@using static DynamoLeagueBlazor.Shared.Features.Fines.FineListResult

<Title>
    @_title
</Title>

<MudTable Items="_result.Fines" Dense=true Loading=_loading Filter="new Func<FineItem, bool>(FilterFunc)"> 
    <ToolBarContent>
        <MudText Typo="Typo.h6">@_title</MudText>
        <MudSpacer />
        <MudTextField @bind-Value="_searchValue" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>Actions</MudTh>
        <MudTh>Name</MudTh>
        <MudTh>Reason</MudTh>
        <MudTh>Amount</MudTh>
        <MudTh>Status</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel=Actions>
            <MudIconButton Icon="@Icons.Material.Filled.MoneyOff" Color="Color.Error" Variant="Variant.Outlined" Size="Size.Small" Class="ma-2" OnClick="(e) => OpenManageFineDialog(context.FineId)" />
        </MudTd>
        <MudTd DataLabel=Name>
            <PlayerNameWithHeadShot Name="@context.PlayerName" HeadShotUrl="@context.PlayerHeadShotUrl" />
        </MudTd>
        <MudTd DataLabel=Reason>@context.FineReason</MudTd>
        <MudTd DataLabel=Amount>@context.FineAmount</MudTd>
        <MudTd DataLabel=Status>
            @{
                RenderFragment status = context.FineStatus switch
                {
                    "Approved" => @<MudIcon Icon=@Icons.Outlined.CheckCircle Color=Color.Success />,
                    "Pending" => @<MudIcon Icon=@Icons.Outlined.Info Color=Color.Info />,
                    _ => throw new ArgumentOutOfRangeException("Fine Status not found")
                };
            }
            @status
        </MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>